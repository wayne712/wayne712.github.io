---
layout: post
title:  "算法练习1.3.14"
date:   2017-05-27 00:00:53 +0000
categories: alg4 
---

{% highlight java %}
import java.util.Iterator;

public class ResizingArrayQueueOfString implements Iterable<String>
{
	
	private String[] vals = new String[1];
	private int N, head, tail;
	
	public ResizingArrayQueueOfString()
	{
		N = 0;
		head = 0;
		tail = 0;
	}
	
	public void enqueue(String s)
	{
		if (N == vals.length) resize(vals.length * 2);
		vals[tail++] = s;		
		N++;
		tail = tail % vals.length;
	}
	
	public String dequeue()
	{
		if (N == 0) return "";
		if (N > 0 && N == vals.length / 4) resize(vals.length / 2);
		String item = vals[head % vals.length];
		vals[head++] = null;
		N--;
		return item;
	}
	
	public boolean isEmpty()
	{
		return N == 0;
	}
	
	@Override
	public Iterator<String> iterator()
	{
		return new ArrayQueueIterator();
	}
	
	private class ArrayQueueIterator implements Iterator<String>
	{
		private int next = head;
		private int index = 0;
		@Override
		public boolean hasNext() {
			return index++ < N;
		}

		@Override
		public String next() {
			return vals[next++ % vals.length];
		}
		
	}
	
	private void resize(int max)
	{
		String[] newVals = new String[max];
		for (int i = 0; i < vals.length; i++)
			newVals[i] = vals[i];
		vals = newVals;
	}

	public static void main(String[] args) {
		ResizingArrayQueueOfString q = new ResizingArrayQueueOfString();
		q.enqueue("Hello");
		q.enqueue("World");
		q.enqueue("Foo");
		q.dequeue();
		q.enqueue("Bar");
		q.dequeue();
		q.enqueue("Hello world");
		q.enqueue("456");
		q.enqueue("123");
		
		for (String s : q)
		{
			System.out.println(s);
		}
	}

}

{% endhighlight %}